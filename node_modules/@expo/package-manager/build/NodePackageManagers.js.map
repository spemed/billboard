{"version":3,"file":"NodePackageManagers.js","sourceRoot":"","sources":["../src/NodePackageManagers.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync, { SpawnOptions } from '@expo/spawn-async';\nimport ansiRegex from 'ansi-regex';\nimport detectIndent from 'detect-indent';\nimport detectNewline from 'detect-newline';\nimport findWorkspaceRoot from 'find-yarn-workspace-root';\nimport fs from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport path from 'path';\nimport split from 'split';\nimport { Transform } from 'stream';\nimport rimraf from 'rimraf';\n\nimport { Logger, PackageManager } from './PackageManager';\n\nconst ansi = `(?:${ansiRegex().source})*`;\nconst npmPeerDependencyWarningPattern = new RegExp(\n  `${ansi}npm${ansi} ${ansi}WARN${ansi}.+You must install peer dependencies yourself\\\\.\\n`,\n  'g'\n);\nconst yarnPeerDependencyWarningPattern = new RegExp(\n  `${ansi}warning${ansi} \"[^\"]+\" has (?:unmet|incorrect) peer dependency \"[^\"]+\"\\\\.\\n`,\n  'g'\n);\n\n/**\n * Returns true if the project is using yarn, false if the project is using npm.\n *\n * @param projectRoot\n */\nexport function isUsingYarn(projectRoot: string): boolean {\n  const workspaceRoot = findWorkspaceRoot(projectRoot);\n  if (workspaceRoot) {\n    return fs.existsSync(path.join(workspaceRoot, 'yarn.lock'));\n  }\n  return fs.existsSync(path.join(projectRoot, 'yarn.lock'));\n}\n\nclass NpmStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(npmPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\n\nclass YarnStderrTransform extends Transform {\n  _transform(\n    chunk: Buffer,\n    encoding: string,\n    callback: (error?: Error | null, data?: any) => void\n  ) {\n    this.push(chunk.toString().replace(yarnPeerDependencyWarningPattern, ''));\n    callback();\n  }\n}\nexport class NpmPackageManager implements PackageManager {\n  options: SpawnOptions;\n  private log: Logger;\n\n  constructor({ cwd, log, silent }: { cwd: string; log?: Logger; silent?: boolean }) {\n    this.log = log || console.log;\n    this.options = {\n      cwd,\n      ...(silent\n        ? { ignoreStdio: true }\n        : {\n            stdio: ['inherit', 'inherit', 'pipe'],\n          }),\n    };\n  }\n  get name() {\n    return 'npm';\n  }\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n  async addAsync(...names: string[]) {\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'dependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n  async addDevAsync(...names: string[]) {\n    const { versioned, unversioned } = this._parseSpecs(names);\n    if (versioned.length) {\n      await this._patchAsync(versioned, 'devDependencies');\n      await this._runAsync(['install']);\n    }\n    if (unversioned.length) {\n      await this._runAsync(['install', '--save-dev', ...unversioned.map(spec => spec.raw)]);\n    }\n  }\n  async versionAsync() {\n    const { stdout } = await spawnAsync('npm', ['--version'], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n  async getConfigAsync(key: string) {\n    const { stdout } = await spawnAsync('npm', ['config', 'get', key], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async removeLockfileAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for NpmPackageManager.removeLockfileAsync');\n    }\n    let lockfilePath = path.join(this.options.cwd, 'package-lock.json');\n    if (fs.existsSync(lockfilePath)) {\n      fs.removeSync(lockfilePath);\n    }\n  }\n  async cleanAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for NpmPackageManager.cleanAsync');\n    }\n    let nodeModulesPath = path.join(this.options.cwd, 'node_modules');\n    if (fs.existsSync(nodeModulesPath)) {\n      rimraf.sync(nodeModulesPath);\n    }\n  }\n\n  // Private\n  private async _runAsync(args: string[]) {\n    if (!this.options.ignoreStdio) {\n      this.log(`> npm ${args.join(' ')}`);\n    }\n    const promise = spawnAsync('npm', [...args], this.options);\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr\n        .pipe(split(/\\r?\\n/, (line: string) => line + '\\n'))\n        .pipe(new NpmStderrTransform())\n        .pipe(process.stderr);\n    }\n    return promise;\n  }\n\n  private _parseSpecs(names: string[]) {\n    const result: {\n      versioned: npmPackageArg.Result[];\n      unversioned: npmPackageArg.Result[];\n    } = { versioned: [], unversioned: [] };\n    names\n      .map(name => npmPackageArg(name))\n      .forEach(spec => {\n        if (spec.rawSpec) {\n          result.versioned.push(spec);\n        } else {\n          result.unversioned.push(spec);\n        }\n      });\n    return result;\n  }\n\n  private async _patchAsync(\n    specs: npmPackageArg.Result[],\n    packageType: 'dependencies' | 'devDependencies'\n  ) {\n    const pkgPath = path.join(this.options.cwd || '.', 'package.json');\n    const pkgRaw = await fs.readFile(pkgPath, { encoding: 'utf8', flag: 'r' });\n    const pkg = JSON.parse(pkgRaw);\n    specs.forEach(spec => {\n      pkg[packageType] = pkg[packageType] || {};\n      pkg[packageType][spec.name!] = spec.rawSpec;\n    });\n    await fs.writeJson(pkgPath, pkg, {\n      spaces: detectIndent(pkgRaw).indent,\n      EOL: detectNewline(pkgRaw),\n    });\n  }\n}\n\nexport class YarnPackageManager implements PackageManager {\n  options: SpawnOptions;\n  private log: Logger;\n\n  constructor({ cwd, log, silent }: { cwd: string; log?: Logger; silent?: boolean }) {\n    this.log = log || console.log;\n    this.options = {\n      cwd,\n      ...(silent\n        ? { ignoreStdio: true }\n        : {\n            stdio: ['inherit', 'inherit', 'pipe'],\n          }),\n    };\n  }\n  get name() {\n    return 'Yarn';\n  }\n  async installAsync() {\n    await this._runAsync(['install']);\n  }\n  async addAsync(...names: string[]) {\n    await this._runAsync(['add', ...names]);\n  }\n  async addDevAsync(...names: string[]) {\n    await this._runAsync(['add', '--dev', ...names]);\n  }\n  async versionAsync() {\n    const { stdout } = await spawnAsync('yarnpkg', ['--version'], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n  async getConfigAsync(key: string) {\n    const { stdout } = await spawnAsync('yarnpkg', ['config', 'get', key], { stdio: 'pipe' });\n    return stdout.trim();\n  }\n\n  async removeLockfileAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for YarnPackageManager.removeLockfileAsync');\n    }\n    let lockfilePath = path.join(this.options.cwd, 'yarn-lock.json');\n    if (fs.existsSync(lockfilePath)) {\n      fs.removeSync(lockfilePath);\n    }\n  }\n  async cleanAsync() {\n    if (!this.options.cwd) {\n      throw new Error('cwd required for YarnPackageManager.cleanAsync');\n    }\n    let nodeModulesPath = path.join(this.options.cwd, 'node_modules');\n    if (fs.existsSync(nodeModulesPath)) {\n      rimraf.sync(nodeModulesPath);\n    }\n  }\n\n  // Private\n  private async _runAsync(args: string[]) {\n    if (!this.options.ignoreStdio) {\n      this.log(`> yarn ${args.join(' ')}`);\n    }\n    const promise = spawnAsync('yarnpkg', args, this.options);\n    if (promise.child.stderr && !this.options.ignoreStdio) {\n      promise.child.stderr.pipe(new YarnStderrTransform()).pipe(process.stderr);\n    }\n    return promise;\n  }\n}\n\nexport type CreateForProjectOptions = {\n  npm?: boolean;\n  yarn?: boolean;\n  log?: Logger;\n  silent?: boolean;\n};\n\nexport function createForProject(\n  projectRoot: string,\n  options: CreateForProjectOptions = {}\n): NpmPackageManager | YarnPackageManager {\n  let PackageManager;\n  if (options.npm) {\n    PackageManager = NpmPackageManager;\n  } else if (options.yarn) {\n    PackageManager = YarnPackageManager;\n  } else if (isUsingYarn(projectRoot)) {\n    PackageManager = YarnPackageManager;\n  } else {\n    PackageManager = NpmPackageManager;\n  }\n\n  return new PackageManager({ cwd: projectRoot, log: options.log, silent: options.silent });\n}\n\nexport function getModulesPath(projectRoot: string): string {\n  const workspaceRoot = findWorkspaceRoot(path.resolve(projectRoot)); // Absolute path or null\n  if (workspaceRoot) {\n    return path.resolve(workspaceRoot, 'node_modules');\n  }\n\n  return path.resolve(projectRoot, 'node_modules');\n}\n"]}