{"version":3,"file":"Permissions.js","sourceRoot":"","sources":["../../src/android/Permissions.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { Document } from './Manifest';\n\ntype XMLPermission = { $: { 'android:name': string } };\n\nexport const requiredPermissions = [\n  'android.permission.INTERNET',\n  'android.permission.ACCESS_NETWORK_STATE',\n  'android.permission.SYSTEM_ALERT_WINDOW',\n  'android.permission.WAKE_LOCK',\n  'com.google.android.c2dm.permission.RECEIVE',\n];\nexport const allPermissions = [\n  ...requiredPermissions,\n  'android.permission.ACCESS_WIFI_STATE',\n  'android.permission.ACCESS_COARSE_LOCATION',\n  'android.permission.ACCESS_FINE_LOCATION',\n  'android.permission.CAMERA',\n  'android.permission.MANAGE_DOCUMENTS',\n  'android.permission.READ_CONTACTS',\n  'android.permission.WRITE_CONTACTS',\n  'android.permission.READ_CALENDAR',\n  'android.permission.WRITE_CALENDAR',\n  'android.permission.READ_EXTERNAL_STORAGE',\n  'android.permission.READ_INTERNAL_STORAGE',\n  'android.permission.READ_PHONE_STATE',\n  'android.permission.RECORD_AUDIO',\n  'android.permission.USE_FINGERPRINT',\n  'android.permission.VIBRATE',\n  'android.permission.WRITE_EXTERNAL_STORAGE',\n  'android.permission.READ_SMS',\n  'com.anddoes.launcher.permission.UPDATE_COUNT',\n  'com.android.launcher.permission.INSTALL_SHORTCUT',\n  'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n  'com.google.android.providers.gsf.permission.READ_GSERVICES',\n  'com.htc.launcher.permission.READ_SETTINGS',\n  'com.htc.launcher.permission.UPDATE_SHORTCUT',\n  'com.majeur.launcher.permission.UPDATE_BADGE',\n  'com.sec.android.provider.badge.permission.READ',\n  'com.sec.android.provider.badge.permission.WRITE',\n  'com.sonyericsson.home.permission.BROADCAST_BADGE',\n];\n\nfunction prefixAndroidPermissionsIfNecessary(permissions: string[]): string[] {\n  return permissions.map(permission => {\n    if (!permission.includes('.')) {\n      return `android.permission.${permission}`;\n    }\n    return permission;\n  });\n}\n\nexport function getAndroidPermissions(config: ExpoConfig): string[] {\n  return config.android?.permissions ?? [];\n}\n\nexport async function setAndroidPermissions(config: ExpoConfig, manifestDocument: Document) {\n  const permissions = getAndroidPermissions(config);\n  let permissionsToAdd = [];\n  if (permissions === null) {\n    // Use all Expo permissions\n    permissionsToAdd = allPermissions;\n  } else {\n    // Use minimum required, plus any specified in permissions array\n    const providedPermissions = prefixAndroidPermissionsIfNecessary(permissions);\n    permissionsToAdd = [...providedPermissions, ...requiredPermissions];\n  }\n\n  let manifestPermissions: XMLPermission[] = [];\n  if (!manifestDocument.manifest.hasOwnProperty('uses-permission')) {\n    manifestDocument.manifest['uses-permission'] = [];\n  }\n  manifestPermissions = manifestDocument.manifest['uses-permission'];\n\n  permissionsToAdd.forEach(permission => {\n    if (!isPermissionAlreadyRequested(permission, manifestPermissions)) {\n      addPermissionToManifest(permission, manifestPermissions);\n    }\n  });\n\n  return manifestDocument;\n}\n\nexport function isPermissionAlreadyRequested(\n  permission: string,\n  manifestPermissions: XMLPermission[]\n): boolean {\n  const hasPermission = manifestPermissions.filter(\n    (e: any) => e['$']['android:name'] === permission\n  );\n  return hasPermission.length > 0;\n}\n\nexport function addPermissionToManifest(permission: string, manifestPermissions: XMLPermission[]) {\n  manifestPermissions.push({ $: { 'android:name': permission } });\n  return manifestPermissions;\n}\n"]}