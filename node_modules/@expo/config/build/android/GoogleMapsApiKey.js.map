{"version":3,"file":"GoogleMapsApiKey.js","sourceRoot":"","sources":["../../src/android/GoogleMapsApiKey.ts"],"names":[],"mappings":";;;;;;;;;;;AAGA,SAAgB,mBAAmB,CAAC,MAAkB;;IACpD,8BAAO,MAAM,CAAC,OAAO,0CAAE,MAAM,0CAAE,UAAU,0CAAE,MAAM,uCAAI,IAAI,EAAC;AAC5D,CAAC;AAFD,kDAEC;AAED,SAAsB,mBAAmB,CAAC,MAAkB,EAAE,gBAA0B;;QACtF,MAAM,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAE3C,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,gBAAgB,CAAC;SACzB;QAED,IAAI,eAAe,GAAG,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAChE,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,kBAAkB,CAC1D,CAAC,CAAC,CAAC,CAAC;QAEL,qBAAqB;QACrB,IAAI,oBAAoB,CAAC;QACzB,MAAM,YAAY,GAAG;YACnB,CAAC,EAAE;gBACD,cAAc,EAAE,gCAAgC;gBAChD,eAAe,EAAE,MAAM;aACxB;SACF,CAAC;QACF,IAAI,WAAW,IAAI,eAAe,EAAE;YAClC,oBAAoB,GAAG,eAAe,CAAC,WAAW,CAAC,CAAC,MAAM,CACxD,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,gCAAgC,CACxE,CAAC;YACF,IAAI,oBAAoB,CAAC,MAAM,EAAE;gBAC/B,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC;aACxD;iBAAM;gBACL,eAAe,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjD;SACF;aAAM;YACL,eAAe,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SAC/C;QAED,wBAAwB;QACxB,IAAI,uBAAuB,CAAC;QAC5B,MAAM,kBAAkB,GAAG;YACzB,CAAC,EAAE;gBACD,cAAc,EAAE,wBAAwB;gBACxC,kBAAkB,EAAE,OAAO;aAC5B;SACF,CAAC;QAEF,IAAI,eAAe,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAClD,uBAAuB,GAAG,eAAe,CAAC,cAAc,CAAC,CAAC,MAAM,CAC9D,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,wBAAwB,CAChE,CAAC;YACF,IAAI,uBAAuB,CAAC,MAAM,EAAE;gBAClC,uBAAuB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,GAAG,OAAO,CAAC;aAC/D;iBAAM;gBACL,eAAe,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aAC1D;SACF;aAAM;YACL,eAAe,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;SACxD;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;CAAA;AAvDD,kDAuDC","sourcesContent":["import { ExpoConfig } from '../Config.types';\nimport { Document } from './Manifest';\n\nexport function getGoogleMapsApiKey(config: ExpoConfig) {\n  return config.android?.config?.googleMaps?.apiKey ?? null;\n}\n\nexport async function setGoogleMapsApiKey(config: ExpoConfig, manifestDocument: Document) {\n  const apiKey = getGoogleMapsApiKey(config);\n\n  if (!apiKey) {\n    return manifestDocument;\n  }\n\n  let mainApplication = manifestDocument.manifest.application.filter(\n    (e: any) => e['$']['android:name'] === '.MainApplication'\n  )[0];\n\n  // add meta-data item\n  let existingMetaDataItem;\n  const metaDataItem = {\n    $: {\n      'android:name': 'com.google.android.geo.API_KEY',\n      'android:value': apiKey,\n    },\n  };\n  if ('meta-data' in mainApplication) {\n    existingMetaDataItem = mainApplication['meta-data'].filter(\n      (e: any) => e['$']['android:name'] === 'com.google.android.geo.API_KEY'\n    );\n    if (existingMetaDataItem.length) {\n      existingMetaDataItem[0]['$']['android:value'] = apiKey;\n    } else {\n      mainApplication['meta-data'].push(metaDataItem);\n    }\n  } else {\n    mainApplication['meta-data'] = [metaDataItem];\n  }\n\n  // add uses-library item\n  let existingUsesLibraryItem;\n  const newUsesLibraryItem = {\n    $: {\n      'android:name': 'org.apache.http.legacy',\n      'android:required': 'false',\n    },\n  };\n\n  if (mainApplication.hasOwnProperty('uses-library')) {\n    existingUsesLibraryItem = mainApplication['uses-library'].filter(\n      (e: any) => e['$']['android:name'] === 'org.apache.http.legacy'\n    );\n    if (existingUsesLibraryItem.length) {\n      existingUsesLibraryItem[0]['$']['android:required'] = 'false';\n    } else {\n      mainApplication['uses-library'].push(newUsesLibraryItem);\n    }\n  } else {\n    mainApplication['uses-library'] = [newUsesLibraryItem];\n  }\n\n  return manifestDocument;\n}\n"]}