"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
function getGoogleMobileAdsAppId(config) {
    var _a, _b, _c;
    return _c = (_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.googleMobileAdsAppId, (_c !== null && _c !== void 0 ? _c : null);
}
exports.getGoogleMobileAdsAppId = getGoogleMobileAdsAppId;
function getGoogleMobileAdsAutoInit(config) {
    var _a, _b, _c;
    return _c = (_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.googleMobileAdsAutoInit, (_c !== null && _c !== void 0 ? _c : false);
}
exports.getGoogleMobileAdsAutoInit = getGoogleMobileAdsAutoInit;
function setGoogleMobileAdsConfig(config, manifestDocument) {
    return __awaiter(this, void 0, void 0, function* () {
        const appId = getGoogleMobileAdsAppId(config);
        const autoInit = getGoogleMobileAdsAutoInit(config);
        if (!appId) {
            return manifestDocument;
        }
        let mainApplication = manifestDocument.manifest.application.filter((e) => e['$']['android:name'] === '.MainApplication')[0];
        // add application ID
        let existingApplicationId;
        const newApplicationId = {
            $: {
                'android:name': 'com.google.android.gms.ads.APPLICATION_ID',
                'android:value': appId,
            },
        };
        if (mainApplication.hasOwnProperty('meta-data')) {
            existingApplicationId = mainApplication['meta-data'].filter((e) => e['$']['android:name'] === 'com.google.android.gms.ads.APPLICATION_ID');
            if (existingApplicationId.length) {
                existingApplicationId[0]['$']['android:value'] = appId;
            }
            else {
                mainApplication['meta-data'].push(newApplicationId);
            }
        }
        else {
            mainApplication['meta-data'] = [newApplicationId];
        }
        // add delay auto init
        let existingDelayAutoInit;
        const newDelayAutoInit = {
            $: {
                'android:name': 'com.google.android.gms.ads.DELAY_APP_MEASUREMENT_INIT',
                'android:value': !autoInit,
            },
        };
        if (mainApplication.hasOwnProperty('meta-data')) {
            existingDelayAutoInit = mainApplication['meta-data'].filter((e) => e['$']['android:name'] === 'com.google.android.gms.ads.DELAY_APP_MEASUREMENT_INIT');
            if (existingDelayAutoInit.length) {
                existingDelayAutoInit[0]['$']['android:value'] = !autoInit;
            }
            else {
                mainApplication['meta-data'].push(newDelayAutoInit);
            }
        }
        else {
            mainApplication['meta-data'] = [newDelayAutoInit];
        }
        return manifestDocument;
    });
}
exports.setGoogleMobileAdsConfig = setGoogleMobileAdsConfig;
//# sourceMappingURL=GoogleMobileAds.js.map