"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const WarningAggregator_1 = require("../WarningAggregator");
function getAdaptiveIcon(config) {
    var _a, _b, _c;
    // TODO: add support for applying adaptive icon config
    return _c = (_b = (_a = config.android) === null || _a === void 0 ? void 0 : _a.adaptiveIcon) === null || _b === void 0 ? void 0 : _b.foregroundImage, (_c !== null && _c !== void 0 ? _c : null);
}
exports.getAdaptiveIcon = getAdaptiveIcon;
function setAdaptiveIconAsync(config, projectRoot) {
    return __awaiter(this, void 0, void 0, function* () {
        let icon = getAdaptiveIcon(config);
        if (!icon) {
            return;
        }
        WarningAggregator_1.addWarningAndroid('android.adaptiveIcon', 'This is the image that your app uses on your home screen, you will need to configure it manually.');
    });
}
exports.setAdaptiveIconAsync = setAdaptiveIconAsync;
//# sourceMappingURL=AdaptiveIcon.js.map