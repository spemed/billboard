{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yangruiyang/react-native/billboard/src/components/records/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Images from \"../../constants/images\";\nimport Mock from \"../../mock/activity\";\nimport UserMsgHeader from \"../user_msg_header\";\n\nvar Record = function (_Component) {\n  _inherits(Record, _Component);\n\n  var _super = _createSuper(Record);\n\n  function Record(props) {\n    var _this;\n\n    _classCallCheck(this, Record);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      records: Mock.records\n    };\n    return _this;\n  }\n\n  _createClass(Record, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"viewItemBuilder\",\n    value: function viewItemBuilder(index, item) {\n      return React.createElement(View, {\n        style: styles.itemBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(UserMsgHeader, {\n        ptr: Images.mock.recordPtr,\n        name: \"\\u6768\\u9510\\u626C\",\n        description: \"1\\u5206\\u949F\\u524D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"#979B9A\",\n          fontSize: 16,\n          paddingVertical: 16\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, item.description), React.createElement(Image, {\n        source: {\n          uri: Images.mock.recordPtr\n        },\n        style: styles.bodyImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          backgroundColor: \"#F2F9F2\",\n          borderRadius: 16,\n          paddingVertical: 5,\n          paddingHorizontal: 10,\n          color: \"#9DD39A\",\n          textAlign: \"center\",\n          marginVertical: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, \"#\\u5730\\u70B9:\", item.address)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(FlatList, {\n        style: styles.container,\n        data: this.state.records,\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref) {\n          var index = _ref.index,\n              item = _ref.item;\n          return _this2.viewItemBuilder(index, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Record;\n}(Component);\n\nexport { Record as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#F1F3F0\",\n    flexDirection: \"column\"\n  },\n  itemBox: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: \"#FFFFFF\",\n    marginBottom: 15,\n    borderRadius: 10,\n    paddingHorizontal: 20\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: \"center\",\n    paddingTop: 18,\n    paddingBottom: 2\n  },\n  body: {\n    flexDirection: 'column',\n    alignItems: \"flex-start\"\n  },\n  bodyImage: {\n    width: Dimensions.get('window').width * 0.7,\n    height: 180,\n    borderRadius: 12\n  }\n});","map":{"version":3,"sources":["/Users/yangruiyang/react-native/billboard/src/components/records/index.js"],"names":["React","Component","Images","Mock","UserMsgHeader","Record","props","state","records","index","item","styles","itemBox","mock","recordPtr","body","color","fontSize","paddingVertical","description","uri","bodyImage","backgroundColor","borderRadius","paddingHorizontal","textAlign","marginVertical","address","container","viewItemBuilder","StyleSheet","create","flexDirection","flex","marginBottom","header","alignItems","paddingTop","paddingBottom","width","Dimensions","get","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n    FlatList, Text, View, Dimensions,Image,StyleSheet,StatusBar\n} from 'react-native'\nimport Images from '../../constants/images'\nimport Mock from '../../mock/activity'\nimport UserMsgHeader from '../user_msg_header'\n\nexport default class Record extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            records : Mock.records\n        }\n    }\n    componentDidMount() {\n        //网络请求,取得活动中心数据\n    }\n    //视图构造器\n    viewItemBuilder(index, item) {\n        return (\n            <View style={styles.itemBox} >\n                <UserMsgHeader\n                    ptr={Images.mock.recordPtr}\n                    name=\"杨锐扬\"\n                    description=\"1分钟前\"\n                />\n                <View style={styles.body}>\n                    <Text\n                        style={{\n                            color: \"#979B9A\",\n                            fontSize: 16,\n                            paddingVertical:16,\n                        }}\n                    >\n                        {item.description}\n                    </Text>\n                    <Image\n                        source={{uri:Images.mock.recordPtr}}\n                        style={styles.bodyImage}\n                    />\n                    <Text\n                        style={{\n                            backgroundColor: \"#F2F9F2\",\n                            borderRadius: 16,\n                            paddingVertical: 5,\n                            paddingHorizontal: 10,\n                            color: \"#9DD39A\",\n                            textAlign: \"center\",\n                            marginVertical:15,\n                        }}>\n                        #地点:{item.address}\n                    </Text>\n                </View>\n            </View>\n        )\n    }\n    render() {\n        return (\n            <FlatList\n                style={styles.container}\n                data={\n                    this.state.records\n                }\n                showsVerticalScrollIndicator={false}\n                renderItem={\n                    ({index,item}) => this.viewItemBuilder(index,item)\n                }\n            />\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#F1F3F0\",   \n        flexDirection: \"column\",\n    },\n    itemBox: {\n        flex:1,\n        flexDirection:'column',\n        backgroundColor: \"#FFFFFF\",\n        marginBottom: 15,\n        borderRadius: 10,\n        paddingHorizontal:20,\n    },\n    header: {\n        flexDirection: 'row',\n        alignItems: \"center\",\n        paddingTop:18,\n        paddingBottom:2,\n    },\n    body: {\n        flexDirection:'column',\n        alignItems: \"flex-start\",\n    },\n    bodyImage: {\n        width: Dimensions.get('window').width * 0.7,\n        height: 180,\n        borderRadius: 12,\n    }\n  });"]},"metadata":{},"sourceType":"module"}